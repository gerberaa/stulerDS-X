#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏ –∑ –±–µ–∑–∫—ñ–Ω–µ—á–Ω–∏–º –¥–µ—Ç–µ–∫—Ç—É–≤–∞–Ω–Ω—è–º —Ç–≤—ñ—Ç—ñ–≤
"""

import asyncio
import logging
from twitter_monitor import TwitterMonitor
from selenium_twitter_monitor import SeleniumTwitterMonitor

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_twitter_monitor_duplicates():
    """–¢–µ—Å—Ç TwitterMonitor –Ω–∞ –¥—É–±–ª—ñ–∫–∞—Ç–∏"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è TwitterMonitor –Ω–∞ –¥—É–±–ª—ñ–∫–∞—Ç–∏")
    print("=" * 50)
    
    try:
        async with TwitterMonitor() as monitor:
            # –î–æ–¥–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∞–∫–∞—É–Ω—Ç
            test_username = "pilk_xz"
            monitor.add_account(test_username)
            
            print(f"‚úÖ –î–æ–¥–∞–Ω–æ –∞–∫–∞—É–Ω—Ç: {test_username}")
            print(f"üìä –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤: {len(monitor.sent_tweets.get(test_username, set()))}")
            
            # –ü–µ—Ä—à–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞
            print("\nüîç –ü–µ—Ä—à–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞...")
            tweets1 = await monitor.check_new_tweets()
            print(f"üìù –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–≤—ñ—Ç—ñ–≤: {len(tweets1)}")
            print(f"üìä –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤ –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: {len(monitor.sent_tweets.get(test_username, set()))}")
            
            # –î—Ä—É–≥–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ (–º–∞—î –±—É—Ç–∏ 0 –Ω–æ–≤–∏—Ö)
            print("\nüîç –î—Ä—É–≥–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ (–º–∞—î –±—É—Ç–∏ 0 –Ω–æ–≤–∏—Ö)...")
            tweets2 = await monitor.check_new_tweets()
            print(f"üìù –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–≤—ñ—Ç—ñ–≤: {len(tweets2)}")
            print(f"üìä –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤ –ø—ñ—Å–ª—è –¥—Ä—É–≥–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: {len(monitor.sent_tweets.get(test_username, set()))}")
            
            # –¢—Ä–µ—Ç—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ (–º–∞—î –±—É—Ç–∏ 0 –Ω–æ–≤–∏—Ö)
            print("\nüîç –¢—Ä–µ—Ç—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ (–º–∞—î –±—É—Ç–∏ 0 –Ω–æ–≤–∏—Ö)...")
            tweets3 = await monitor.check_new_tweets()
            print(f"üìù –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–≤—ñ—Ç—ñ–≤: {len(tweets3)}")
            print(f"üìä –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤ –ø—ñ—Å–ª—è —Ç—Ä–µ—Ç—å–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: {len(monitor.sent_tweets.get(test_username, set()))}")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if len(tweets2) == 0 and len(tweets3) == 0:
                print("\n‚úÖ –¢–ï–°–¢ –ü–†–û–ô–®–û–í: –î—É–±–ª—ñ–∫–∞—Ç–∏ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ!")
            else:
                print(f"\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–®–û–í: –ó–Ω–∞–π–¥–µ–Ω–æ {len(tweets2)} —Ç–∞ {len(tweets3)} –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤")
                
    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è TwitterMonitor: {e}")

async def test_selenium_monitor_duplicates():
    """–¢–µ—Å—Ç SeleniumTwitterMonitor –Ω–∞ –¥—É–±–ª—ñ–∫–∞—Ç–∏"""
    print("\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è SeleniumTwitterMonitor –Ω–∞ –¥—É–±–ª—ñ–∫–∞—Ç–∏")
    print("=" * 50)
    
    try:
        async with SeleniumTwitterMonitor() as monitor:
            # –î–æ–¥–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∞–∫–∞—É–Ω—Ç
            test_username = "pilk_xz"
            monitor.add_account(test_username)
            
            print(f"‚úÖ –î–æ–¥–∞–Ω–æ –∞–∫–∞—É–Ω—Ç: {test_username}")
            print(f"üìä –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤: {len(monitor.sent_tweets.get(test_username, set()))}")
            
            # –ü–µ—Ä—à–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞
            print("\nüîç –ü–µ—Ä—à–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞...")
            tweets1 = await monitor.check_new_tweets()
            print(f"üìù –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–≤—ñ—Ç—ñ–≤: {len(tweets1)}")
            print(f"üìä –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤ –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: {len(monitor.sent_tweets.get(test_username, set()))}")
            
            # –î—Ä—É–≥–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ (–º–∞—î –±—É—Ç–∏ 0 –Ω–æ–≤–∏—Ö)
            print("\nüîç –î—Ä—É–≥–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ (–º–∞—î –±—É—Ç–∏ 0 –Ω–æ–≤–∏—Ö)...")
            tweets2 = await monitor.check_new_tweets()
            print(f"üìù –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–≤—ñ—Ç—ñ–≤: {len(tweets2)}")
            print(f"üìä –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤ –ø—ñ—Å–ª—è –¥—Ä—É–≥–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: {len(monitor.sent_tweets.get(test_username, set()))}")
            
            # –¢—Ä–µ—Ç—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ (–º–∞—î –±—É—Ç–∏ 0 –Ω–æ–≤–∏—Ö)
            print("\nüîç –¢—Ä–µ—Ç—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ (–º–∞—î –±—É—Ç–∏ 0 –Ω–æ–≤–∏—Ö)...")
            tweets3 = await monitor.check_new_tweets()
            print(f"üìù –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–≤—ñ—Ç—ñ–≤: {len(tweets3)}")
            print(f"üìä –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤ –ø—ñ—Å–ª—è —Ç—Ä–µ—Ç—å–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: {len(monitor.sent_tweets.get(test_username, set()))}")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if len(tweets2) == 0 and len(tweets3) == 0:
                print("\n‚úÖ –¢–ï–°–¢ –ü–†–û–ô–®–û–í: –î—É–±–ª—ñ–∫–∞—Ç–∏ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ!")
            else:
                print(f"\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–®–û–í: –ó–Ω–∞–π–¥–µ–Ω–æ {len(tweets2)} —Ç–∞ {len(tweets3)} –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤")
                
    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è SeleniumTwitterMonitor: {e}")

async def test_stable_ids():
    """–¢–µ—Å—Ç —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ ID —Ç–≤—ñ—Ç—ñ–≤"""
    print("\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ ID —Ç–≤—ñ—Ç—ñ–≤")
    print("=" * 50)
    
    try:
        async with TwitterMonitor() as monitor:
            test_username = "pilk_xz"
            monitor.add_account(test_username)
            
            # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–≤—ñ—Ç–∏ –¥–≤—ñ—á—ñ
            tweets1 = await monitor.get_user_tweets(test_username, limit=3)
            tweets2 = await monitor.get_user_tweets(test_username, limit=3)
            
            print(f"üìù –ü–µ—Ä—à–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞: {len(tweets1)} —Ç–≤—ñ—Ç—ñ–≤")
            print(f"üìù –î—Ä—É–≥–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞: {len(tweets2)} —Ç–≤—ñ—Ç—ñ–≤")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ ID —Å—Ç–∞–±—ñ–ª—å–Ω—ñ
            stable_ids = 0
            for i, tweet1 in enumerate(tweets1):
                if i < len(tweets2):
                    tweet2 = tweets2[i]
                    if tweet1['id'] == tweet2['id']:
                        stable_ids += 1
                        print(f"‚úÖ –¢–≤—ñ—Ç {i+1}: ID —Å—Ç–∞–±—ñ–ª—å–Ω–∏–π ({tweet1['id']})")
                    else:
                        print(f"‚ùå –¢–≤—ñ—Ç {i+1}: ID –Ω–µ—Å—Ç–∞–±—ñ–ª—å–Ω–∏–π ({tweet1['id']} != {tweet2['id']})")
            
            if stable_ids == len(tweets1):
                print(f"\n‚úÖ –¢–ï–°–¢ –ü–†–û–ô–®–û–í: –í—Å—ñ {stable_ids} ID —Å—Ç–∞–±—ñ–ª—å–Ω—ñ!")
            else:
                print(f"\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–®–û–í: –¢—ñ–ª—å–∫–∏ {stable_ids}/{len(tweets1)} ID —Å—Ç–∞–±—ñ–ª—å–Ω—ñ")
                
    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ ID: {e}")

async def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    print("üöÄ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø –î–£–ë–õ–Ü–ö–ê–¢–Ü–í –¢–í–Ü–¢–Ü–í")
    print("=" * 60)
    
    # –¢–µ—Å—Ç—É—î–º–æ TwitterMonitor
    await test_twitter_monitor_duplicates()
    
    # –¢–µ—Å—Ç—É—î–º–æ SeleniumTwitterMonitor
    await test_selenium_monitor_duplicates()
    
    # –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—å ID
    await test_stable_ids()
    
    print("\n" + "=" * 60)
    print("üéâ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û!")
    print("\nüìã –ü—ñ–¥—Å—É–º–æ–∫ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å:")
    print("‚úÖ –î–æ–¥–∞–Ω–æ sent_tweets –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤")
    print("‚úÖ –î–æ–¥–∞–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω—É —Å–∏—Å—Ç–µ–º—É –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤ bot.py")
    print("‚úÖ –ü–æ–∫—Ä–∞—â–µ–Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é —Å—Ç–∞–±—ñ–ª—å–Ω–∏—Ö ID –¥–ª—è HTML –ø–∞—Ä—Å–∏–Ω–≥—É")
    print("‚úÖ –î–æ–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —Ç–≤—ñ—Ç—ñ–≤")
    print("‚úÖ –î–æ–¥–∞–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")

if __name__ == "__main__":
    asyncio.run(main())