#!/usr/bin/env python3
"""
–®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç Twitter –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
–ü—Ä–æ—Å—Ç–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —à–≤–∏–¥–∫–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ
"""

import asyncio
import logging
from twitter_monitor import TwitterMonitor
from config import TWITTER_AUTH_TOKEN, TWITTER_CSRF_TOKEN

# –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.WARNING)
logger = logging.getLogger(__name__)

async def quick_test():
    """–®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ"""
    print("üöÄ –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç Twitter –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É")
    print("-" * 40)
    
    if not TWITTER_AUTH_TOKEN:
        print("‚ùå TWITTER_AUTH_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        return False
        
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä
        monitor = TwitterMonitor(TWITTER_AUTH_TOKEN, TWITTER_CSRF_TOKEN)
        
        # –¢–µ—Å—Ç 1: –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        print("üîó –¢–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...")
        async with monitor:
            print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è OK")
            
            # –¢–µ—Å—Ç 2: –î–æ–¥–∞–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞
            print("üìù –¢–µ—Å—Ç –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞...")
            monitor.add_account('twitter')
            print("‚úÖ –î–æ–¥–∞–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞ OK")
            
            # –¢–µ—Å—Ç 3: –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–≤—ñ—Ç—ñ–≤
            print("üê¶ –¢–µ—Å—Ç –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–≤—ñ—Ç—ñ–≤...")
            tweets = await monitor.get_user_tweets('twitter', limit=2)
            
            if tweets:
                print(f"‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ {len(tweets)} —Ç–≤—ñ—Ç—ñ–≤")
                print(f"   –ü—Ä–∏–∫–ª–∞–¥: {tweets[0].get('text', '')[:50]}...")
            else:
                print("‚ö†Ô∏è –¢–≤—ñ—Ç–∏ –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ")
                
            # –¢–µ—Å—Ç 4: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤
            print("üîç –¢–µ—Å—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤...")
            new_tweets = await monitor.check_new_tweets()
            print(f"‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∑–Ω–∞–π–¥–µ–Ω–æ {len(new_tweets)} –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤")
            
        print("\nüéâ –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(quick_test())
    
    if success:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:")
        print("- –ó–∞–ø—É—Å—Ç—ñ—Ç—å 'python test_twitter.py' –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç—É")
        print("- –ó–∞–ø—É—Å—Ç—ñ—Ç—å 'python interactive_twitter_test.py' –¥–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç—É")
        print("- –ó–∞–ø—É—Å—Ç—ñ—Ç—å 'python bot.py' –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–æ—Ç–æ–º")
    else:
        print("\n‚ö†Ô∏è –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:")
        print("- TWITTER_AUTH_TOKEN –≤ .env —Ñ–∞–π–ª—ñ")
        print("- TWITTER_CSRF_TOKEN –≤ .env —Ñ–∞–π–ª—ñ")
        print("- –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑'—î–¥–Ω–∞–Ω–Ω—è")
        print("- –î–æ—Å—Ç—É–ø –¥–æ Twitter")