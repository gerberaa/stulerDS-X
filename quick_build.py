#!/usr/bin/env python3
"""
–®–≤–∏–¥–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–º–ø—ñ–ª—è—Ü—ñ—ó –ø—Ä–æ–µ–∫—Ç—É
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–∑–Ω–∞—á–∞—î –ø–ª–∞—Ç—Ñ–æ—Ä–º—É —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Å–∫—Ä–∏–ø—Ç
"""

import os
import sys
import platform
import subprocess

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üöÄ –®–≤–∏–¥–∫–∞ –∫–æ–º–ø—ñ–ª—è—Ü—ñ—è Telegram Monitor Bot")
    print("=" * 50)
    print(f"üíª –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {platform.system()}")
    print("=" * 50)
    
    system = platform.system().lower()
    
    if system == "windows":
        print("ü™ü –ó–∞–ø—É—Å–∫ –∫–æ–º–ø—ñ–ª—è—Ü—ñ—ó –¥–ª—è Windows...")
        try:
            subprocess.run(["build.bat"], check=True)
        except subprocess.CalledProcessError:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É build.bat")
            return False
        except FileNotFoundError:
            print("‚ùå –§–∞–π–ª build.bat –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            return False
    elif system == "linux":
        print("üêß –ó–∞–ø—É—Å–∫ –∫–æ–º–ø—ñ–ª—è—Ü—ñ—ó –¥–ª—è Linux...")
        try:
            subprocess.run(["./build.sh"], check=True)
        except subprocess.CalledProcessError:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É build.sh")
            return False
        except FileNotFoundError:
            print("‚ùå –§–∞–π–ª build.sh –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            return False
    else:
        print(f"‚ùå –ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: {platform.system()}")
        print("–ó–∞–ø—É—Å—Ç—ñ—Ç—å build.py –≤—Ä—É—á–Ω—É")
        return False
    
    print("\nüéâ –ö–æ–º–ø—ñ–ª—è—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)