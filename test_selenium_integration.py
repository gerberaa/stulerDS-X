#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó Selenium Twitter Monitor
"""

import asyncio
import logging
from selenium_twitter_monitor import SeleniumTwitterMonitor

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_selenium_monitor():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Selenium –º–æ–Ω—ñ—Ç–æ—Ä–∞"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Selenium Twitter Monitor")
    print("=" * 50)
    
    async with SeleniumTwitterMonitor() as monitor:
        print("‚úÖ Selenium –º–æ–Ω—ñ—Ç–æ—Ä —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")
        
        # –î–æ–¥–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∞–∫–∞—É–Ω—Ç
        if monitor.add_account("pilk_xz"):
            print("‚úÖ –î–æ–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∞–∫–∞—É–Ω—Ç: pilk_xz")
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞")
            return
        
        # –¢–µ—Å—Ç—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–≤—ñ—Ç—ñ–≤
        print("\nüîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–≤—ñ—Ç—ñ–≤...")
        tweets = await monitor.get_user_tweets("pilk_xz", limit=3)
        
        if tweets:
            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(tweets)} —Ç–≤—ñ—Ç—ñ–≤:")
            for i, tweet in enumerate(tweets, 1):
                text_preview = tweet['text'][:80] + "..." if len(tweet['text']) > 80 else tweet['text']
                print(f"   {i}. {text_preview}")
                print(f"      üîó {tweet['url']}")
        else:
            print("‚ùå –¢–≤—ñ—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        
        # –¢–µ—Å—Ç—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤
        print("\nüîÑ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤...")
        new_tweets = await monitor.check_new_tweets()
        print(f"üìä –ó–Ω–∞–π–¥–µ–Ω–æ {len(new_tweets)} –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤")
        
        # –¢–µ—Å—Ç—É—î–º–æ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        if tweets:
            print("\nüìù –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è...")
            notification = monitor.format_tweet_notification(tweets[0])
            print("‚úÖ –§–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:")
            print("-" * 40)
            print(notification)
            print("-" * 40)
        
        print("\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É Selenium —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó")
    print("‚ö†Ô∏è –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —É –≤–∞—Å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π Chrome —Ç–∞ ChromeDriver")
    print("=" * 60)
    
    try:
        asyncio.run(test_selenium_monitor())
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –¢–µ—Å—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É: {e}")
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É: {e}")